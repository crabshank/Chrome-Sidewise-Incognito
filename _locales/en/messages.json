{
    // Extension details
    "extName": { "message": "Sidewise Tree Style Tabs" },
    "extDescription": { "message": "A persistent sidebar for Chrome with tree style tabs and much more." },


    // Sidebar container
    "sidebarTitle": { "message": "Sidewise" },
    "sidebars_optionsButtonTooltip": { "message": "Options" },


    // General text snippets
    "text_page": { "message": "page" },
    "text_pages": { "message": "pages" },
    "text_Version": { "message": "Version" },
    "text_monitor": { "message": "monitor" },
    "text_monitors": { "message": "monitors" },
    "text_Window": { "message": "Window" },
    "text_hibernated": { "message": "hibernated" },


    // Chrome internal-URL tab title overrides
    "tabTitle_Extensions": { "message": "Extensions" },
    "tabTitle_Settings": { "message": "Settings" },
    "tabTitle_Downloads": { "message": "Downloads" },
    "tabTitle_Bookmarks": { "message": "Bookmarks" },
    "tabTitle_History": { "message": "History" },
    "tabTitle_NewTab": { "message": "New Tab" },


    // Omnibox
    "omniboxDefaultSuggestion": { "message": "Enter text to search page titles and labels" },
    "omniboxSuggestionPrefix": { "message": "Page:" },


    // Prompts
    "prompt_filterPlaceholderText": { "message": "Type to search titles and URLs"},
    "prompt_filterActiveText": { "message": "Matches shown below. Click here to reset."},
    "prompt_detectMonitors": { "message": "Sidewise will detect your monitor(s) now." },
    "prompt_detectMonitors_complete": { "message": "Monitor detection complete." },
    "prompt_detectMonitors_mac": { "message": "Sidewise will detect your monitor details now.\n\nUnfortunately, Sidewise currently cannot detect multiple monitors properly on Mac OSX. Sidewise will assume you only have a single monitor." },
    "prompt_closeWindow": {
        "message": "Close window with $COUNT$ $PAGES$?",
        "placeholders": {
            "count": { "content": "$1", "example": "4" },
            "pages": { "content": "$2", "example": "pages" }
        }
     },
    "prompt_confirmResetOptions": { "message": "Are you sure you want to reset all options to the defaults?" },


    // Sidebar button labels
    "sidebarLabel_Pages": { "message": "Pages" },
    "sidebarLabel_Notepad": { "message": "Notepad" },
    "sidebarLabel_Bookmarks": { "message": "Bookmarks" },
    "sidebarLabel_GlobalHistory": { "message": "Browser history" },
    "sidebarLabel_TabHistory": { "message": "Tab history" },
    "sidebarLabel_ClosedPages": { "message": "Closed pages" },
    "sidebarLabel_Reddit": { "message": "Reddit" },


    // Pages sidebar
    "pages_hibernatedHint": { "message": "Hibernated page" },
    "pages_omniboxTip": { "message": "Tip: You can type \"sw sometext\" into Chrome's address bar to find pages in Sidewise." },


    // Notepad sidebar
    "notepad_heading": { "message": "Notepad" },
    "notepad_hint": { "message": "Just start typing. Text is auto-saved." },
    "notepad_lastSavedAt": { "message": "Last saved at:" },


    // Bookmarks sidebar
    "bookmarks_heading": { "message": "Bookmarks" },


    // Global History sidebar
    "globalHistory_heading": { "message": "Browser History" },


    // Tab History sidebar
    "tabHistory_heading": { "message": "Tab History" },


    // Closed Pages sidebar
    "closedPages_heading": { "message": "Closed Pages" },


    // Options page
    "optionsPageTitle": { "message": "Sidewise Options" },
    "optionsPageHeading": { "message": "Sidewise Options" },

    "optionsErrorSavingSetting": { "message": "Please correct your entry." },
    "optionsSuccessSavingSetting": { "message": "Setting saved." },
    "optionsSavedAllSettings": { "message": "Settings saved." },
    "optionsResetAllSettings": { "message": "All settings restored to defaults." },
    "optionsDefaultStatus": { "message": "Hello! This is Sidewise's options page. Modify your options below." },
    "optionsHeadingSidebar": { "message": "Sidebar behavior" },
    "optionsHeadingMonitors": { "message": "Monitors" },
    "optionsHeadingMisc": { "message": "Advanced" },
    "optionsShowAdvanced": { "message": "+ Show advanced options" },

    "option_openSidebarOnStartup": { "message": "Open sidebar on startup" },
    "option_keepSidebarOnTop": { "message": "Keep sidebar visible next to dock window" },
    "option_keepSidebarOnTop_hint": { "message": "!<p>If enabled, when switching to Chrome from another app, Sidewise will bring the sidebar to the front, so other windows don't obscure or hide it.</p><p>Unfortunately, this messes with the OS's native window&#8209;ordering. For example, on Windows, you'll have to Alt&#8209;Tab twice to get back to your last non-Chrome window when this option is enabled.</p>" },
    "option_browserActionButtonBehavior": { "message": "When browser toolbar button is clicked" },
    "option_browserActionButtonBehavior_toggle": { "message": "toggle sidebar on/off" },
    "option_browserActionButtonBehavior_show": { "message": "show/redock sidebar" },
    "option_browserActionButtonBehavior_hint": { "message": "If 'show/redock sidebar' is selected, the sidebar will be turned on and docked to the current window when the button is clicked. To close the sidebar in this case, use the close button on the sidebar's title bar.<br/><br/>If 'toggle sidebar on/off' is selected, clicking Sidewise's browser toolbar button will toggle the sidebar on or off." },
    "option_dockState": { "message": "Dock sidebar to this side of the window" },
    "option_dockState_left": { "message": "left" },
    "option_dockState_right": { "message": "right" },
    "option_dockState_undocked": { "message": "undocked" },

    "optionsHeadingPages": { "message": "Pages sidebar"},
    "option_pages_doubleClickAction": { "message": "When double-clicking a row"},
    "option_pages_doubleClickAction_none": { "message": "do nothing"},
    "option_pages_doubleClickAction_close": { "message": "close page/window"},
    "option_pages_doubleClickAction_hibernate": { "message": "toggle hibernation"},
    "option_pages_doubleClickAction_expand": { "message": "expand/collapse branch"},
    "option_pages_middleClickAction": { "message": "When middle-clicking a row"},
    "option_pages_middleClickAction_none": { "message": "do nothing"},
    "option_pages_middleClickAction_close": { "message": "close page/window"},
    "option_pages_middleClickAction_hibernate": { "message": "toggle hibernation"},
    "option_pages_middleClickAction_expand": { "message": "expand/collapse branch"},
    "option_smartFocusOnClose": { "message": "Use smart focus logic when closing tabs"},
    "option_smartFocusOnClose_hint": { "message": "<p>When enabled and the sidebar is open, Sidewise will use its own tree-oriented logic to decide which tab to focus next after a tab is closed.</p><p>Note that this sometimes causes a quick visual jump between two tabs when closing a tab, due to limitations of Chrome.</p><p>Technical details: smart focus uses the following order of priority in picking the next tab to focus:</p><p><ol><li>First child of closed tab</li><li>Next sibling of closed tab</li><li>Preceding sibling of closed tab</li><li>Parent of closed tab</li><li>Let Chrome decide</li></ol></p><p>Smart focus starts with the first rule and proceeds down the list until it finds a suitable tab to focus.</p><p>If this option is disabled, Sidewise will always let Chrome decide which tab to focus next.</p>"},
    "option_smartFocusPrefersCousins": { "message": "Smart focus prefers cousins before parents"},
    "option_smartFocusPrefersCousins_hint": { "message": "<p>When this option is enabled, smart focus will focus <i>later cousin tabs</i> before it focuses its own <i>parent tab</i>.</p><p>For example, say you open two tabs, one to reddit.com and one to digg.com. You then middle-click some links on each of these tabs to open several child tabs underneath those two tabs.</p><p>If <b>prefer cousins</b> is <i>disabled</i>, once you close the last child tab under reddit.com, the parent reddit.com tab will be focused.</p><p>If <b>prefer cousins</b> is <i>enabled</i>, once you close the last child tab under reddit.com, the first child tab under digg.com (first cousin) will be focused instead.</p><p>This option is desirable if you open lots of child tabs in this manner and prefer to 'browse forward' through all the child tabs before returning to the parents.</p>"},

    "optionsInfoMonitorDetection": { "message": "<p>Whenever you change your monitor configuration, <b>reload Chrome</b>, then come here and click 'Detect all monitors now' below.</p><p>This should be done whenever you add or remove monitors, change monitor resolutions, reposition monitors in your OS settings, or change the location/size of your system taskbars.</p>"},
    "optionsInfoMonitorsOnYourSystem": { "message": "Sidewise currently believes you have <b>$1</b> $2 connected to your system." },
    "option_maximizedOffset": { "message": "Maximized window screen-edge overhang" },
    "option_maximizedOffset_units": { "message": "pixels" },
    "option_detectMonitorsButton": { "message": "Detect all monitors now" },

    "option_useAdvancedTreeFiltering": { "message": "Use nerd-mode tree filtering" },
    "option_useAdvancedTreeFiltering_hint": { "message": "<p>Normally, searching from a sidebar tree's filter box will match all rows containing your search term(s).</p><p>When this option is enabled, for a row to match, all non-space characters in your search text must be present in the order you entered them, but not necessarily next to each other.</p><p>For example, suppose we have a row containing the text \"Sidewise is great\". When this option is disabled, a search for \"wise\" would match the row, but a search for \"swgreat\" would not. When this option is enabled, both searches would match the row.</p><p>Even when this option is disabled, a multiple-term search like \"side great\" would still match the row.</p>" },
    "option_loggingEnabled": { "message": "Enable debug logging" },
    "option_loggingEnabled_hint": { "message": "Outputs verbose logging information to Javascript console of background page, sidebar, and options page. For development or bug feedback only." },
    "option_sidebarTargetWidth": { "message": "Sidebar target width" },
    "option_alwaysShowAdvancedOptions": { "message": "Always show advanced options" },

    "option_saveButton": { "message": "Save settings" },
    "option_resetButton": { "message": "Reset to defaults" },
    "optionsSaveNotNeeded": { "message": "Note: Settings are automatically saved as you change them." }
}